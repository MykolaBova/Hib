# Hsqldb Server cfg file.
# See the HyperSQL Network Listeners chapter of the HyperSQL User Guide.

# Each server.database.X setting defines a database "catalog".
# I.e., an independent set of data.
# Each server.database.X setting corresponds exactly to the jdbc:hsqldb:*
# JDBC URL you would use if you wanted to get a direct (In-Process)
# Connection to the catalog instead of "serving" it.

server.database.0=file:../data/julp_examples/julp_examples;ifexists=false
server.dbname.0=julp_examples
# java -cp ../lib/hsqldb.jar org.hsqldb.Server --database.0 file:portfoliodb --dbname.0 portfoliodb;ifexists=true
# I suggest that, for every file: catalog you define, you add the
# connection property "ifexists=true" after the database instance
# is created (which happens simply by starting the Server one time).
# Just append ";ifexists=true" to the file: URL, like so:
# server.database.0=file:db0/db0;ifexists=true

# server.dbname.0 defaults to "" (i.e. server.dbname.n for n==0), but
# the catalog definition n will be entirely ignored for n > 0 if you do not
# set server.dbname.n.  I.e. dbname setting is required for n > 0, though it
# may be set to blank (e.g. "server.dbname.3=")

#hsqldb.script_format=0
#runtime.gc_interval=0
#sql.enforce_strict_size=false
#hsqldb.cache_size_scale=8
#readonly=false
#hsqldb.nio_data_file=true
#hsqldb.cache_scale=14
#hsqldb.default_table_type=cached
#hsqldb.cache_file_scale=1
#hsqldb.log_size=200
#server.no_system_exit



